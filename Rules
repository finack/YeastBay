#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require 'compass'

Compass.add_project_configuration('compass.rb')

## Compilers and Routes that should match but not do anything
compile('/assets/stylesheets/modules/*/') { }
route('/assets/stylesheets/modules/*/') { }
compile('/assets/stylesheets/partials/*/') { }
route('/assets/stylesheets/partials/*/') { }
compile('/assets/javascript/*/') { }
compile('/favicon') { }
compile('/assets/images/*/') { }

compile '/assets/stylesheets/style' do
  filter :sass, Compass.sass_engine_options
end

#### This is how you can compile to many files using reps
#compile '/batches/29/', :rep => :full do
#  filter :haml
#  puts 'bar'
#  puts item.path
#end
#
#
#compile '/batches/29/' do
#  filter :haml
#  puts ':default'
#  puts item.path
#end
#
#route '*', :rep => :full do
#  new file name here
#end

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext.nil?
    filter :haml
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount
  elsif ext == 'html'
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end

  #use layouts with .html extension or layout specified in meta
  item[:layout] = "none" unless item[:layout] || File.extname(route_path(item)) == '.html'

  layout 'default' unless item[:layout] == "none"
end

route '*' do
  if item.binary?
    # /foo/ -> /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # /foo/ -> /foo/index.html
    # item.identifier + 'index.html'
    route_path(item)
  end
end

layout '*', :haml, :format => :html5