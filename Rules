#!/usr/bin/env ruby
require "rubygems"
require "bundler/setup"
require 'compass'

Compass.add_project_configuration('compass.rb')

# A few helpful tips about the Rules file:
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/assets/stylesheets/modules/*/' do
  # don’t compile modules
end
compile '/assets/stylesheets/partials/*/' do
  # don’t compile partials
end
route '/assets/stylesheets/modules/*/' do
  # don’t compile modules
end
route '/assets/stylesheets/partials/*/' do
  # don’t compile partials
end
compile '/assets/stylesheets/style' do
  filter :sass, Compass.sass_engine_options
end

compile '/assets/javascript/*/' do
end

compile '/favicon' do
end

compile '/assets/images/*/' do
end

#route '/stylesheets/style' do
#   item.identifier.chop + '.css'
#end

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'erb'
    filter :erb
  elsif ext == 'haml' || ext.nil?
    filter :haml
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount
  elsif ext == 'html'
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end

  #use layouts with .html extension or layout specified in meta
  item[:layout] = "none" unless item[:layout] || File.extname(route_path(item)) == '.html'

  layout 'default' unless item[:layout] == "none"
end

route '*' do
  if item.binary?
    # /foo/ -> /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # /foo/ -> /foo/index.html
    # item.identifier + 'index.html'
    route_path(item)
  end
end

layout '*', :haml, :format => :html5
